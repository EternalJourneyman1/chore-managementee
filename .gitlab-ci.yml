stages:
  - build
  - test
  - security
  - deploy

variables:
  DOCKER_REGISTRY: registry.gitlab.com/family_chore_tracker/choremanagement
  IMAGE_NAME: family_chore_tracker/choremanagement
  KUBE_NAMESPACE: chore-manangement
#  KUBE_CLUSTER_NAME: chore-cluster
#  KUBE_CONFIG_DATA:

build-backend:
  stage: build
  image: timbru31/java-node
  before_script:
    - apt-get update && apt-get install -y wget unzip
    - wget https://services.gradle.org/distributions/gradle-7.3.3-bin.zip
    - unzip -d /opt gradle-7.3.3-bin.zip
    - export PATH=$PATH:/opt/gradle-7.3.3/bin
  script:
    - gradle clean build

build-frontend:
  stage: build
  image: node:16
  script:
    - cd chore-management-ui
    - yarn install
    - yarn build

test-backend:
  stage: test
  image: timbru31/java-node
  before_script:
    - apt-get update && apt-get install -y wget unzip
    - wget https://services.gradle.org/distributions/gradle-7.3.3-bin.zip
    - unzip -d /opt gradle-7.3.3-bin.zip
    - export PATH=$PATH:/opt/gradle-7.3.3/bin
  script:
    - gradle test

test-frontend:
  stage: test
  image: node:16
  script:
    - cd chore-management-ui
    - yarn install
    - yarn test

sast:
  stage: security
include:
  - template: Security/SAST.gitlab-ci.yml


build-image:
  stage: deploy
  image: docker:stable
  services:
    - docker:dind
  script:
    - docker login -u gitlab-ci-token -p $CI_JOB_TOKEN $CI_REGISTRY
    - docker build -t $CI_REGISTRY_IMAGE:latest .
    - docker push $CI_REGISTRY_IMAGE:latest
  #deploy-kubernetes:
#  stage: deploy
#  image: docker:20
#  script:
#    - echo $KUBE_CONFIG_DATA | base64 -d > kubeconfig.yaml
#    - kubectl config set-cluster $KUBE_CLUSTER_NAME --kubeconfig=kubeconfig.yaml --server=<your-kubernetes-server>
#    - kubectl config set-context $KUBE_NAMESPACE --kubeconfig=kubeconfig.yaml --cluster=$KUBE_CLUSTER_NAME --user=<your-kubernetes-user>
#    - kubectl config use-context $KUBE_NAMESPACE --kubeconfig=kubeconfig.yaml
#    - kubectl apply -f kubernetes/deployment.yaml -n $KUBE_NAMESPACE
#    - kubectl apply -f kubernetes/service.yaml -n $KUBE_NAMESPACE
